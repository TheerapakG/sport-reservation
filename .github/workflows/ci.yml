name: CI

on:
  push:
    paths:
      - ".github/workflows/ci.yml"
      - "k8s/sport-reservation-auth/deployment.yaml"
      - "k8s/sport-reservation-web/deployment.yaml"
      - "packages/**"
    branches: ["main"]
  workflow_dispatch:

jobs:
  cache-dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install --workspace-root

  format:
    strategy:
      matrix:
        package: [auth, web]
    needs: [cache-dependencies]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/sport-reservation-${{ matrix.package }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install --workspace-root

      - name: Autogenerate Types
        run: pnpm nx run-many -t generate --output-style=stream

      - name: Run Format
        run: pnpm prettier -c .

  lint:
    strategy:
      matrix:
        package: [auth, web]
    needs: [cache-dependencies]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/sport-reservation-${{ matrix.package }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install --workspace-root

      - name: Autogenerate Types
        run: pnpm nx run-many -t generate --output-style=stream

      - name: Run Lint
        run: pnpm eslint --flag unstable_ts_config .

  typecheck:
    strategy:
      matrix:
        package: [auth, web]
    needs: [cache-dependencies]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/sport-reservation-${{ matrix.package }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install --workspace-root

      - name: Autogenerate Types
        run: pnpm nx run-many -t generate --output-style=stream

      - name: Run Typecheck
        run: pnpm tsc --noEmit

  build:
    strategy:
      matrix:
        package: [auth, web]
    needs: [cache-dependencies, format, lint, typecheck]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/sport-reservation-${{ matrix.package }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install --workspace-root

      - name: Autogenerate Types
        run: pnpm nx run-many -t generate --output-style=stream

      - name: Run Build
        run: pnpm build

      - name: Build container image
        run: docker build -t registry.digitalocean.com/${{ secrets.REGISTRY_NAME }}/sport-reservation-${{ matrix.package }}:$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/${{ secrets.REGISTRY_NAME }}/sport-reservation-${{ matrix.package }}:$(echo $GITHUB_SHA | head -c7)

  deploy:
    strategy:
      matrix:
        package: [auth, web]
    needs: [build]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/sport-reservation-${{ matrix.package }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Update deployment file
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|registry.digitalocean.com/${{ secrets.REGISTRY_NAME }}/sport-reservation-${{ matrix.package }}:'${TAG}'|' $GITHUB_WORKSPACE/k8s/sport-reservation-${{ matrix.package }}/deployment.yaml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/k8s/sport-reservation-${{ matrix.package }}/deployment.yaml
